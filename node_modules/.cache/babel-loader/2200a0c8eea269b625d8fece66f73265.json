{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\dash\\\\fidness-dashboard\\\\src\\\\app\\\\context\\\\AuthContext.jsx\";\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport React from \"react\";\nconst AuthContext = createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  let [loading, setLoading] = useState(true);\n  let history = useHistory();\n\n  let loginUser = async loginForm => {\n    const {\n      username,\n      password\n    } = loginForm;\n    console.log({\n      username,\n      password\n    });\n    let response = await fetch(\"http://127.0.0.1:8000/auth/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n\n    try {\n      const data = await response.json();\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      localStorage.setItem(\"username\", JSON.stringify(username));\n      history.push(\"/dashboard\");\n    } catch (error) {\n      alert(\"wrong credentials!\");\n    }\n  };\n\n  const updateToken = async () => {\n    const token = localStorage.authTokens;\n    console.log(\"authTokens\", authTokens);\n\n    if (token) {\n      console.log(authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh);\n      let response = await fetch(\"http://127.0.0.1:8000/auth/token/refresh/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n        })\n      });\n\n      try {\n        let data = await response.json();\n        console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\", data);\n        setAuthTokens(data);\n        setUser(jwt_decode(data.access));\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      } catch (err) {}\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    localStorage.removeItem(\"username\");\n    history.push(\"/login\");\n  };\n\n  const contextData = {\n    loginUser: loginUser,\n    user: user,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    updateToken();\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useHistory","React","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","loginForm","username","password","console","log","response","fetch","method","headers","body","stringify","data","json","access","setItem","push","error","alert","updateToken","token","refresh","err","logoutUser","removeItem","contextData"],"sources":["C:/projects/dash/fidness-dashboard/src/app/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    let [authTokens, setAuthTokens] = useState(() =>\r\n        localStorage.getItem(\"authTokens\")\r\n            ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n            : null\r\n    );\r\n    let [user, setUser] = useState(() =>\r\n        localStorage.getItem(\"authTokens\")\r\n            ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n            : null\r\n    );\r\n    let [loading, setLoading] = useState(true);\r\n    let history = useHistory();\r\n\r\n    let loginUser = async (loginForm) => {\r\n        const { username, password } = loginForm;\r\n        console.log({ username, password })\r\n\r\n        let response = await fetch(\"http://127.0.0.1:8000/auth/token/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n        try {\r\n            const data = await response.json();\r\n            setAuthTokens(data);\r\n            setUser(jwt_decode(data.access));\r\n            localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n            localStorage.setItem(\"username\", JSON.stringify(username))\r\n            history.push(\"/dashboard\");\r\n        } catch (error) {\r\n            alert(\"wrong credentials!\");\r\n        }\r\n    };\r\n\r\n    const updateToken = async () => {\r\n        const token = localStorage.authTokens;\r\n        console.log(\"authTokens\", authTokens);\r\n        if (token) {\r\n            console.log(authTokens?.refresh)\r\n            let response = await fetch(\"http://127.0.0.1:8000/auth/token/refresh/\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n\r\n                body: JSON.stringify({\r\n                    'refresh': authTokens?.refresh\r\n                }),\r\n            });\r\n            try {\r\n                let data = await response.json();\r\n                console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\", data)\r\n                setAuthTokens(data);\r\n                setUser(jwt_decode(data.access));\r\n                localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n            } catch (err) {\r\n            }\r\n        }\r\n    };\r\n\r\n    const logoutUser = () => {\r\n        setAuthTokens(null);\r\n        setUser(null);\r\n        localStorage.removeItem(\"authTokens\");\r\n        localStorage.removeItem(\"username\");\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    const contextData = {\r\n        loginUser: loginUser,\r\n        user: user,\r\n        logoutUser: logoutUser,\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateToken();\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}