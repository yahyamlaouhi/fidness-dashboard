{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\dash\\\\fidness-dashboard\\\\src\\\\app\\\\context\\\\AuthContext.jsx\";\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport React, { Component } from \"react\";\nconst AuthContext = createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  let [loading, setLoading] = useState(true);\n  let history = useHistory();\n\n  let loginUser = async loginForm => {\n    const {\n      username,\n      password\n    } = loginForm;\n    console.log({\n      username,\n      password\n    });\n    let response = await fetch(\"http://127.0.0.1:8000/auth/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n\n    try {\n      const data = await response.json();\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      NotificationManager.success('Success message', 'Logged in ');\n      history.push(\"/dashboard\");\n    } catch (error) {\n      NotificationManager.warning('Warning message', 'Wrong username or password', 3000);\n      alert(\"wrong credentials!\");\n    }\n  };\n\n  const updateToken = async () => {\n    const token = localStorage.authTokens;\n    console.log(token);\n\n    if (token) {\n      let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n        })\n      });\n\n      try {\n        let data = await response.json();\n        setAuthTokens(data);\n        setUser(jwt_decode(data.access));\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      } catch (err) {\n        logoutUser();\n      }\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history.push(\"/login\");\n  };\n\n  const contextData = {\n    loginUser: loginUser,\n    user: user,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    updateToken();\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useHistory","NotificationContainer","NotificationManager","React","Component","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","loginForm","username","password","console","log","response","fetch","method","headers","body","stringify","data","json","access","setItem","success","push","error","warning","alert","updateToken","token","refresh","err","logoutUser","removeItem","contextData"],"sources":["C:/projects/dash/fidness-dashboard/src/app/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport React, { Component } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  let [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [loading, setLoading] = useState(true);\r\n  let history = useHistory();\r\n\r\n  let loginUser = async (loginForm) => {\r\n    const { username, password } = loginForm;\r\n      console.log({ username, password })\r\n\r\n    let response = await fetch(\"http://127.0.0.1:8000/auth/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n    try {\r\n      const data = await response.json();\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      NotificationManager.success('Success message', 'Logged in ');\r\n      history.push(\"/dashboard\");\r\n\r\n    } catch (error) {\r\n      NotificationManager.warning('Warning message', 'Wrong username or password', 3000);\r\n      alert(\"wrong credentials!\");\r\n    }\r\n  };\r\n\r\n  const updateToken = async () => {\r\n    const token = localStorage.authTokens;\r\n    console.log(token);\r\n    if (token) {\r\n      let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          refresh:authTokens?.refresh\r\n        }),\r\n      });\r\n      try {\r\n        let data = await response.json();\r\n        setAuthTokens(data);\r\n        setUser(jwt_decode(data.access));\r\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      } catch (err) {\r\n        logoutUser();\r\n      }\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const contextData = {\r\n    loginUser: loginUser,\r\n    user: user,\r\n    logoutUser: logoutUser,\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateToken();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}