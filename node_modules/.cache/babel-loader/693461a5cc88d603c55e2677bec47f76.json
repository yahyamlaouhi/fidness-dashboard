{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\dash\\\\fidness-dashboard\\\\src\\\\app\\\\context\\\\AuthContext.jsx\";\nimport { createContext, useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport React, { Component } from 'react';\nconst AuthContext = createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      history.push('/');\n    } else {\n      alert('Something went wrong!');\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    history.push('/login');\n  };\n\n  let updateToken = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, loading ? null : children);\n};","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useHistory","React","Component","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","push","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval"],"sources":["C:/projects/dash/fidness-dashboard/src/app/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport React, { Component }  from 'react';\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext;\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\r\n    let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\r\n    let [loading, setLoading] = useState(true)\r\n\r\n    const history = useHistory()\r\n\r\n    let loginUser = async (e )=> {\r\n        e.preventDefault()\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\r\n        })\r\n        let data = await response.json()\r\n\r\n        if(response.status === 200){\r\n            setAuthTokens(data)\r\n            setUser(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n            history.push('/')\r\n        }else{\r\n            alert('Something went wrong!')\r\n        }\r\n    }\r\n\r\n\r\n    let logoutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem('authTokens')\r\n        history.push('/login')\r\n    }\r\n\r\n\r\n    let updateToken = async ()=> {\r\n\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({'refresh':authTokens?.refresh})\r\n        })\r\n\r\n        let data = await response.json()\r\n        \r\n        if (response.status === 200){\r\n            setAuthTokens(data)\r\n            setUser(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n        }else{\r\n            logoutUser()\r\n        }\r\n\r\n        if(loading){\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    let contextData = {\r\n        user:user,\r\n        authTokens:authTokens,\r\n        loginUser:loginUser,\r\n        logoutUser:logoutUser,\r\n    }\r\n\r\n\r\n    useEffect(()=> {\r\n\r\n        if(loading){\r\n            updateToken()\r\n        }\r\n\r\n        let fourMinutes = 1000 * 60 * 4\r\n\r\n        let interval =  setInterval(()=> {\r\n            if(authTokens){\r\n                updateToken()\r\n            }\r\n        }, fourMinutes)\r\n        return ()=> clearInterval(interval)\r\n\r\n    }, [authTokens, loading])\r\n\r\n    return(\r\n        <AuthContext.Provider value={contextData} >\r\n            {loading ? null : children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}